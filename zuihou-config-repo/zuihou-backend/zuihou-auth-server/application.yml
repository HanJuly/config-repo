logging:
  path: ./logs/zuihou-auth-server
  file: ${logging.path}/root.log
  common-pattern: '%d{yyyy-MM-dd HH:mm:ss.SSS}:[%5p] [%t:%r] [%C{1}:%M:%L] --> %m%n'
  level:
    console: INFO
    rest: INFO
    service: INFO
    sql: DEBUG

zuihou:
  mysql:
    admin:
      database: zuihou_admin_dev       # 根据环境更改
      driverClassName: ${zuihou.mysql.driverClassName}
      host: ${zuihou.mysql.host}
      password: ${zuihou.mysql.password}
      port: ${zuihou.mysql.port}
      url: jdbc:mysql://${zuihou.mysql.admin.host}:${zuihou.mysql.admin.port}/${zuihou.mysql.admin.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true
      username: ${zuihou.mysql.username}
    driverClassName: com.mysql.cj.jdbc.Driver
    host: zuihou.mysql.host             # 根据环境更改
    port: 3306                  # 根据环境更改
    username: root              # 根据环境更改
    password: bNVOqb7WKLX5Bjnw+LMv92taj25KOxDimXxILPQjw42wgv+1lHzOH8kr97xDwWdhpY67QuYCS7sWN4W46YbkFA==

spring:
  application:
    name: zuihou-auth-server
  sleuth:
    sampler:
      percentage: 1
    integration:
      enabled: false
    scheduled:
      skip-pattern: "^org.*HystrixStreamTask$"
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
  redis:
    key-prefix: dev
    host: zuihou.redis.host
    pool:
      max-active: 100
      min-idle: 2
      max-idle: 8
      max-wait: 100
  rabbitmq:
    host: zuihou.rabbitmq.host
    port: 5672
    username: guest
    password: guest
  zipkin:
#    base-url: http://zuihou-zipkin:8510
    locator:
      discovery:
        enabled: true
    service:
      name: ${spring.application.name}
#    rabbitmq:
#      queue: zipkin


ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 # 并发执行的最大线程数，默认10
      maxQueueSize: 1000 # BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 # 即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000

eureka:
  instance:
    status-page-url-path: ${management.context-path}/info
    health-check-url-path: ${management.context-path}/health
    preferIpAddress: true
    status-page-url: http://gateway.zuihou.com:9770/api/auth/swagger-ui.html
    ip-address: 127.0.0.1
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}
      management.context-path: ${management.context-path}


management:
  security:
    enabled: true
  context-path: /mgmt

security:
  basic:
    enabled: true
    path: ${management.context-path}
  user:
    name: admin
    password: ${ZUIHOU_AUTH_SERVER_PASSWORD:admin}
endpoints:
  health:
    enabled: true
    sensitive: true  #actuator的health接口是否需要安全保证

jwt:
  token-header: token # 其三方应用token
  expire: 7200
  pri-key: #   私钥
    path: app/pri.key
  pub-key:
    path: app/pub.key

client:
  id: zuihou-auth-server
  secret: 123456
  token-header: token
  admin-header: _isAdmin
  expire: 7200
  pri-key: # client 私钥
    path: client/pri.key
  pub-key:
    path: client/pub.key

id-generator:
  machine-code: 1  # id生成器机器掩码

swagger2:
  package: com.github.zuihou.auth.controller
  service:
    name: 认证服务
    description: 认证服务，用于token管理
    contact:
      name: 最后
      url: http://www.zuihou.com/
      email: tangstruggle@sina.com